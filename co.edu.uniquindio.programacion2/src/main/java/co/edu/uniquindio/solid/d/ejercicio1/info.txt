La Inversión de Dependencias (Dependency Inversion Principle, DIP) es otro de los principios SOLID
que establece que los módulos de alto nivel no deben depender de módulos de bajo nivel, sino de abstracciones.
 En otras palabras, las clases de alto nivel (las que contienen la lógica de negocio más importante) no deberían
 depender directamente de las clases de bajo nivel, sino de interfaces o abstracciones.

Ejemplo: Centro de Impresión
Supongamos que estamos diseñando un sistema para un centro de impresión, donde tenemos una clase CentroImpresion
que envía documentos a diferentes tipos de impresoras.




Problema:
En este código, la clase CentroImpresion depende directamente de las
clases ImpresoraLaser y ImpresoraInyeccion. Esto viola el principio de Inversión de Dependencias porque:

Dificultad para escalar: Si queremos añadir más tipos de impresoras, tendríamos que modificar CentroImpresion.
Difícil de probar: No podemos probar CentroImpresion fácilmente sin también involucrar las impresoras reales.
Alta acoplamiento: CentroImpresion está fuertemente acoplado a las implementaciones de impresoras específicas.